<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0-windows</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>client-app\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaProxyServerUrl>http://localhost:3000</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.21" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.21" />
    <PackageReference Include="Microsoft.Data.Sqlite" Version="7.0.10" />
    <PackageReference Include="System.CodeDom" Version="7.0.0" />
    <PackageReference Include="System.Drawing.Common" Version="7.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="Views\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="Views\**" />
    <EmbeddedResource Remove="Views\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="Views\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="client-app\src\aspnetcore-https.ts" />
    <None Remove="client-app\src\aspnetcore-react.ts" />
    <None Remove="client-app\src\declarations.d.ts" />
    <None Remove="client-app\src\WebReportDesigner.tsx" />
    <None Remove="client-app\src\WebReportViewer.tsx" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="client-app\src\aspnetcore-https.ts" />
    <TypeScriptCompile Include="client-app\src\aspnetcore-react.ts" />
    <TypeScriptCompile Include="client-app\src\declarations.d.ts" />
    <TypeScriptCompile Include="client-app\src\WebReportDesigner.tsx" />
    <TypeScriptCompile Include="client-app\src\WebReportViewer.tsx" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\.editorconfig" Link=".editorconfig" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="client-app\src\Scripts\" />
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="combit.ListLabel29">
      <HintPath>..\..\Assemblies\combit.ListLabel29.dll</HintPath>
    </Reference>
    <Reference Include="combit.ListLabel29.Web">
      <HintPath>..\..\Assemblies\combit.ListLabel29.Web.dll</HintPath>
    </Reference>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
