using System;
using System.Data.OleDb;
using System.IO;
using System.Windows.Forms;
using combit.Reporting;
using combit.Reporting.DataProviders;
using Microsoft.Win32;

namespace Data_Binding_2
{
    public partial class Form1 : Form
    {
        private DbCommandSetDataProvider _commandSetDataProvider;

        public Form1()
        {
            Directory.SetCurrentDirectory(@"..\..\..\..\..\..\Report Files");
            InitializeComponent();

            InitDataSet();
        }

        // Init Data Set to access nwind.mdb
        private void InitDataSet()
        {
            //D: Versuche Registry Schlüssel auszulesen
            //US: Try to read registry key
            string databasePath = String.Empty;
            RegistryKey installKey = Registry.CurrentUser.CreateSubKey(@"Software\combit\cmbtll");
            if (installKey != null)
                databasePath = (string)installKey.GetValue("NWINDPath", string.Empty);

            if (String.IsNullOrEmpty(databasePath))
            {
                MessageBox.Show("Unable to find sample database. Make sure List & Label is installed correctly.", "List & Label");

                //D: Buttons deaktivieren
                //US: Disable Buttons
                button1.Enabled = false;
                button2.Enabled = false;
                button3.Enabled = false;
                button4.Enabled = false;
            }
            else
            {
                //D: Erzeuge eine OleDbConnection
                //US: Create an OleDbConnection
                string connectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + databasePath;
                OleDbConnection conn = new OleDbConnection(connectionString);
                conn.Open();

                //D: Erstelle zwei Datenbankabfragen
                //US: Create two database queries
                OleDbCommand command = new OleDbCommand("SELECT * FROM Orders WHERE (OrderID > 11040)", conn);
                OleDbCommand command2 = new OleDbCommand("SELECT [Order Details].OrderID, [Order Details].Quantity, [Order Details].UnitPrice, [Order Details].ProductID, Products.ProductID AS ProductsProductID, Products.CategoryID, Products.Discontinued, Products.ProductName, Products.QuantityPerUnit, Products.ReorderLevel, Products.SupplierID, Products.UnitPrice AS ProductsUnitPrice, Products.UnitsInStock, Products.UnitsOnOrder FROM [Order Details] INNER JOIN Products ON [Order Details].ProductID = Products.ProductID WHERE ([Order Details].OrderID > 11040)", conn);

                //D: Füge dem Provider zwei Tabellen hinzu
                //US: Add two tables to the provider
                _commandSetDataProvider = new DbCommandSetDataProvider();
                _commandSetDataProvider.AddCommand(command, "Orders", "[{0}]", "?");
                _commandSetDataProvider.AddCommand(command2, "Order Details", "[{0}]", "?");

                //D: Füge eine Relation zwischen den beiden Tabellen hinzu
                //US: Add a relation between the two tables
                _commandSetDataProvider.AddRelation("Orders2Order Details", "Orders", "Order Details", "OrderID", "OrderID");

                // automatic selector cannot handle complex join statements - switch off this optimization
                _commandSetDataProvider.MinimalSelect = false;

                //D: Schließe die Verbindung
                //US: Close the connection
                conn.Close();
            }
        }


        [STAThread]
        public static void Main()
        {
            SetProcessDPIAware();
            Application.EnableVisualStyles();
            Application.Run(new Form1());
        }
        [System.Runtime.InteropServices.DllImport("user32.dll")]
        private static extern bool SetProcessDPIAware();

        private void Form1_Load(object sender, System.EventArgs e)
        {
            LL.SetDataBinding(_commandSetDataProvider, "Orders");
        }

        private void Button1_Click(object sender, System.EventArgs e)
        {
            try
            {
                //D: Die order master Daten sollen als Variablen angemeldet werden
                //US: we want to have the order master data as variables
                LL.AutoMasterMode = LlAutoMasterMode.AsVariables;

                //D: Den Standard-Projektnamen setzen
                //US: set the default project name
                LL.AutoProjectFile = "inv_merg.lst";

                //D: Designer aufrufen
                //US: call the designer
                LL.Design();
            }
            catch (ListLabelException LlException)
            {
                //D: Exception abfangen
                //US: Catch Exceptions
                MessageBox.Show("Information: " + LlException.Message + "\n\nThis information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void Button2_Click(object sender, System.EventArgs e)
        {
            try
            {
                //D: Die order master Daten sollen als Variablen angemeldet werden
                //US: we want to have the order master data as variables
                LL.AutoMasterMode = LlAutoMasterMode.AsVariables;

                //D: Den Standard-Projektnamen setzen
                //US: set the default project name
                LL.AutoProjectFile = "inv_merg.lst";

                //D: Drucken
                //US: print
                LL.Print();
            }
            catch (ListLabelException LlException)
            {
                //D: Exception abfangen
                //US: Catch Exceptions
                MessageBox.Show("Information: " + LlException.Message + "\n\nThis information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void Button4_Click(object sender, System.EventArgs e)
        {
            try
            {
                //D: Die order master Daten sollen als Felder angemeldet werden
                //US: we want to have the order master data as fields
                LL.AutoMasterMode = LlAutoMasterMode.AsFields;

                //D: Den Standard-Projektnamen setzen
                //US: set the default project name
                LL.AutoProjectFile = "inv_lst.lst";

                //D: Designer aufrufen
                //US: call the designer
                LL.Design();
            }
            catch (ListLabelException LlException)
            {
                //D: Exception abfangen
                //US: Catch Exceptions
                MessageBox.Show("Information: " + LlException.Message + "\n\nThis information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void Button3_Click(object sender, System.EventArgs e)
        {
            try
            {
                //D: Die order master Daten sollen als Felder angemeldet werden
                //US: we want to have the order master data as fields
                LL.AutoMasterMode = LlAutoMasterMode.AsFields;

                //D: Den Standard-Projektnamen setzen
                //US: set the default project name
                LL.AutoProjectFile = "inv_lst.lst";

                //D: Drucken
                //US: print
                LL.Print();
            }
            catch (ListLabelException LlException)
            {
                //D: Exception abfangen
                //US: Catch Exceptions
                MessageBox.Show("Information: " + LlException.Message + "\n\nThis information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }
    }
}
