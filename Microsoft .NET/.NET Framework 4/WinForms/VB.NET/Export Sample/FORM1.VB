Imports System.Data.OleDb
Imports System.IO
Imports System.Windows.Forms
Imports combit.ListLabel25
Imports combit.ListLabel25.DataProviders
Imports Microsoft.Win32

Public Partial Class Form1
    Inherits Form
    Private _databasePath As String
	Private _startPath As String
	Private _fileFilter As String = "PDF Files|*.PDF"
	Private _exporterTarget As LlExportTarget = LlExportTarget.Pdf
    Private _exportBase As String = "export.pdf"

	Private Property FileName() As String
		Get
			Return fileNameTb.Text
		End Get
		Set
			fileNameTb.Text = value
		End Set
	End Property

	Public Sub New()
		InitializeComponent()

		Dim installKey As RegistryKey = Registry.CurrentUser.CreateSubKey("Software\combit\cmbtll")
		If installKey IsNot Nothing Then
			_databasePath = DirectCast(installKey.GetValue("NWINDPath", String.Empty), String)
		End If

		If [String].IsNullOrEmpty(_databasePath) Then
			MessageBox.Show("Unable to find sample database. Make sure List & Label is installed correctly.", "List & Label")
		End If

        ' Change Directory
        Directory.SetCurrentDirectory("..\..\..\..\..\..\Report Files")
        _startPath = Directory.GetCurrentDirectory()

		FileName = Path.Combine(_startPath, _exportBase)
		formatCb.SelectedIndex = 0
	End Sub

    ''' <summary>
    ''' The main entry point for the application.
    ''' </summary>
    <STAThread>
    Friend Shared Sub Main()
        SetProcessDPIAware()
        Application.EnableVisualStyles()
        Application.Run(New Form1())
    End Sub
    <System.Runtime.InteropServices.DllImport("user32.dll")>
    Private Shared Function SetProcessDPIAware() As Boolean
    End Function

    ' Init Data Reader to access nwind.mdb
    Private Function CreateOleDbCommand() As OleDbCommand
		Dim conn As New OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & _databasePath)
		conn.Open()
		Dim cmd As New OleDbCommand("SELECT * FROM Products INNER JOIN Categories ON (Products.CategoryID = Categories.CategoryID)", conn)
		conn.Close()
		Return cmd
	End Function


    Private Sub CreateButton_Click(sender As Object, e As System.EventArgs) Handles createButton.Click
        Try
            Dim cmd As OleDbCommand = CreateOleDbCommand()

            Dim provider As New DbCommandSetDataProvider()
            provider.AddCommand(cmd, "Products", "[{0}]", "?")
            provider.MinimalSelect = False
            LL.SetDataBinding(provider, "Products")

            ' create export configuration
            Dim exportConfiguration As New ExportConfiguration(_exporterTarget, fileNameTb.Text, "simple.lst")
            exportConfiguration.ShowResult = _showFileCheck.Checked

            'To additonally send the result as eMail, you'd need the following code lines. This
            '                will send an email to llmailtest@combit.net. Set the export format to HTML, as this sample
            '                will send the result as HTML body of the mail. You need to set a valid SMTP server
            '                using the LlExportOption.ExportMailSmtp... options. 


            '
            '                LL.ExportOptions.Clear();
            '                LL.ExportOptions.Add(LlExportOption.ExportSendAsMail, "1");
            '                LL.ExportOptions.Add(LlExportOption.ExportMailTo, "combit GmbH <SMTP:llmailtest@combit.net>");
            '                LL.ExportOptions.Add(LlExportOption.ExportMailSubject, "combit List & Label mail test");
            '                LL.ExportOptions.Add(LlExportOption.ExportMailShowDialog, "1");
            '                LL.ExportOptions.Add(LlExportOption.ExportMailSendResultAs, "text/html");
            '                


            ' Start export
            LL.Export(exportConfiguration)
        Catch LlException As ListLabelException
            ' Catch Exceptions
            MessageBox.Show("Information: " & LlException.Message & vbLf & vbLf & "This information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information)
        End Try
    End Sub

    Private Sub FormatCombo_SelectedValueChanged(sender As Object, e As System.EventArgs) Handles formatCb.SelectedValueChanged
        Select Case formatCb.SelectedIndex
            Case 0
                If True Then
                    _fileFilter = "PDF Files|*.PDF"
                    _exporterTarget = LlExportTarget.Pdf
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".pdf"
                    Exit Select
                End If

            Case 1
                If True Then
                    _fileFilter = "MHTML Files|*.mht"
                    _exporterTarget = LlExportTarget.Mhtml
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".mht"
                    Exit Select
                End If

            Case 2
                If True Then
                    _fileFilter = "HTML Files|*.HTM"
                    _exporterTarget = LlExportTarget.Html
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".htm"
                    Exit Select
                End If

            Case 3
                If True Then
                    _fileFilter = "RTF Files|*.RTF"
                    _exporterTarget = LlExportTarget.Rtf
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".rtf"
                    Exit Select
                End If

            Case 4
                If True Then
                    _fileFilter = "XML Files|*.XML"
                    _exporterTarget = LlExportTarget.Xml
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".xml"
                    Exit Select
                End If

            Case 5
                If True Then
                    _fileFilter = "Tiff Files|*.TIF"
                    _exporterTarget = LlExportTarget.MultiTiff
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".tif"
                    Exit Select
                End If

            Case 6
                If True Then
                    _fileFilter = "Text Files|*.TXT"
                    _exporterTarget = LlExportTarget.Text
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".txt"
                    Exit Select
                End If

            Case 7
                If True Then
                    _fileFilter = "Excel Files|*.XLS"
                    _exporterTarget = LlExportTarget.Xls
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".xls"
                    Exit Select
                End If
            Case 8
                If True Then
                    _fileFilter = "Excel Files|*.XLSX"
                    _exporterTarget = LlExportTarget.Xlsx
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".xlsx"
                    Exit Select
                End If
            Case 9
                If True Then
                    _fileFilter = "HTML Files|*.HTM"
                    _exporterTarget = LlExportTarget.Xhtml
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".htm"
                    Exit Select
                End If
            Case 10
                If True Then
                    _fileFilter = "Preview Files|*.LL"
                    _exporterTarget = LlExportTarget.Preview
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".ll"
                    Exit Select
                End If
            Case 11
                If True Then
                    _fileFilter = "Word Files|*.DOCX"
                    _exporterTarget = LlExportTarget.Docx
                    _exportBase = Path.GetFileNameWithoutExtension(fileNameTb.Text) & ".docx"
                    Exit Select
                End If

        End Select
        FileName = Path.GetDirectoryName(fileNameTb.Text) & "\" & _exportBase
    End Sub

    Private Sub SelectButton_Click(sender As Object, e As System.EventArgs) Handles selectButton.Click
        saveFileDialog.Filter = _fileFilter
        saveFileDialog.FileName = FileName
        If saveFileDialog.ShowDialog() = System.Windows.Forms.DialogResult.OK Then
            FileName = saveFileDialog.FileName
        End If
        Directory.SetCurrentDirectory(_startPath)
    End Sub
End Class
