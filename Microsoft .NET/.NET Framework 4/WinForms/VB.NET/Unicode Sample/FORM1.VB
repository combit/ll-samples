Imports System.Data
Imports System.Data.OleDb
Imports System.IO
Imports System.Windows.Forms
Imports combit.ListLabel25

Public Partial Class Form1
    Inherits Form
    Public Sub New()
		InitializeComponent()

		' Change Directory - needed while running within the IDE
		If Not File.Exists("Address.mdb") Then
            Directory.SetCurrentDirectory("..\..\..\..\..\..\Report Files")
        End If

		' Do not modify variables
		LL.Core.LlSetOption(LlOption.XlatVarnames, 0)
	End Sub

	' create Dataset from address.mdb
	Private Function CreateDataSet() As DataSet
		Dim ds As New DataSet()
        Dim connectionString As String = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & Path.GetDirectoryName(Application.ExecutablePath) & "..\..\..\..\..\..\..\Report Files\Address.mdb"
        Dim myOleDbConnection As New OleDbConnection(connectionString)
		myOleDbConnection.Open()

		Dim restrictions As Object() = New [Object]() {Nothing, Nothing, Nothing, "TABLE"}
		Dim table As DataTable = myOleDbConnection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, restrictions)

		Dim dataAdapter As OleDbDataAdapter
		dataAdapter = New OleDbDataAdapter(New OleDbCommand("SELECT * FROM Persons", myOleDbConnection))
		dataAdapter.FillSchema(ds, SchemaType.Source, "Persons")
		dataAdapter.Fill(ds, "Persons")

		Return ds
	End Function


    <STAThread>
    Public Shared Sub Main()
        SetProcessDPIAware()
        Application.EnableVisualStyles()
        Application.Run(New Form1())
    End Sub
    <System.Runtime.InteropServices.DllImport("user32.dll")>
    Private Shared Function SetProcessDPIAware() As Boolean
    End Function

    Private Sub button1_Click(sender As Object, e As EventArgs) Handles button1.Click
        'D: DataSet anbinden
        'US: now bind to the DataSet
        LL.SetDataBinding(CreateDataSet(), [String].Empty)

        Try
            LL.AutoProjectFile = "simple_unicode.lbl"
            LL.AutoProjectType = LlProject.Label
            LL.AutoShowSelectFile = False
            LL.Design()
        Catch LlException As ListLabelException
            ' Catch Exceptions
            MessageBox.Show("Information: " + LlException.Message + vbLf & vbLf & "This information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information)
        End Try
    End Sub

    Private Sub button2_Click(sender As Object, e As EventArgs) Handles button2.Click
        'D: DataSet anbinden
        'US: now bind to the DataSet
        LL.SetDataBinding(CreateDataSet(), String.Empty)

        Try
            LL.AutoProjectFile = "simple_unicode.lbl"
            LL.AutoProjectType = LlProject.Label
            LL.AutoShowSelectFile = False
            LL.Print()
        Catch LlException As ListLabelException
            ' Catch Exceptions
            MessageBox.Show("Information: " + LlException.Message + vbLf & vbLf & "This information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information)
        End Try
    End Sub

    Private Sub button3_Click(sender As Object, e As EventArgs) Handles button3.Click
        'D: DataSet anbinden
        'US: now bind to the DataSet
        LL.SetDataBinding(CreateDataSet(), String.Empty)

        Try
            LL.AutoProjectFile = "simple_unicode.lst"
            LL.AutoProjectType = LlProject.List
            LL.AutoShowSelectFile = False

            LL.Design()
        Catch LlException As ListLabelException
            ' Catch Exceptions
            MessageBox.Show("Information: " + LlException.Message + vbLf & vbLf & "This information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information)
        End Try
    End Sub

    Private Sub button4_Click(sender As Object, e As EventArgs) Handles button4.Click
        'D: DataSet anbinden
        'US: now bind to the DataSet
        LL.SetDataBinding(CreateDataSet(), String.Empty)

        Try
            LL.AutoProjectFile = "simple_unicode.lst"
            LL.AutoProjectType = LlProject.List
            LL.AutoShowSelectFile = False

            LL.Print()
        Catch LlException As ListLabelException
            ' Catch Exceptions
            MessageBox.Show("Information: " + LlException.Message + vbLf & vbLf & "This information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information)
        End Try
    End Sub
End Class
