using System;
using System.Data.OleDb;
using System.IO;
using System.Windows.Forms;
using combit.Reporting;
using combit.Reporting.DataProviders;
using Microsoft.Win32;

namespace unicode
{
    public partial class Form1 : Form
    {
        private string _databasePath;

        public Form1()
        {
            InitializeComponent();
            //D: Pfad auf Sample-Hauptverzeichnis setzen, Datenbankpfad auslesen
            //US: Set path to main sample path, read database path
            Directory.SetCurrentDirectory(Application.StartupPath + @"\..\..\..\..\..\Report Files");
            RegistryKey installKey = Registry.CurrentUser.CreateSubKey(@"Software\combit\cmbtll");

            if (installKey != null)
                _databasePath = (string)installKey.GetValue("NWINDPath", string.Empty);

            if (_databasePath == string.Empty)
                MessageBox.Show("Unable to find sample database. Make sure List & Label is installed correctly.", "List & Label");
        }

        // create Provider
        private DbCommandSetDataProvider CreateDbCommandSetDataProvider()
        {
            DbCommandSetDataProvider provider = new DbCommandSetDataProvider();
            string ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + _databasePath;
            OleDbConnection myOleDbConnection = new OleDbConnection(ConnectionString);
            myOleDbConnection.Open();
            OleDbCommand myOleDbCommand = new OleDbCommand("SELECT * FROM Products", myOleDbConnection);
            provider.AddCommand(myOleDbCommand, "Products", "[{0}]", "?");
            return provider;
        }

        [STAThread]
        public static void Main()
        {
            SetProcessDPIAware();
            Application.EnableVisualStyles();
            Application.Run(new Form1());
        }
        [System.Runtime.InteropServices.DllImport("user32.dll")]
        private static extern bool SetProcessDPIAware();

        private void MenuItem2_Click(object sender, System.EventArgs e)
        {
            Close();
        }

        private void Button1_Click(object sender, EventArgs e)
        {
            //now bind to the DataProvider
            LL.DataSource = CreateDbCommandSetDataProvider();

            try
            {
                LL.AutoProjectFile = "simple_label.lbl";
                LL.AutoProjectType = LlProject.Label;
                LL.AutoShowSelectFile = false;
                LL.Design();
            }
            catch (ListLabelException LlException)
            {
                // Catch Exceptions
                MessageBox.Show("Information: " + LlException.Message + "\n\nThis information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }

        }

        private void Button2_Click(object sender, EventArgs e)
        {
            //now bind to the DataProvider
            LL.DataSource = CreateDbCommandSetDataProvider();

            try
            {
                LL.AutoProjectFile = "simple_label.lbl";
                LL.AutoProjectType = LlProject.Label;
                LL.AutoShowSelectFile = false;
                LL.Print();
            }
            catch (ListLabelException LlException)
            {
                // Catch Exceptions
                MessageBox.Show("Information: " + LlException.Message + "\n\nThis information was generated by a List & Label custom exception.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }
    }
}
