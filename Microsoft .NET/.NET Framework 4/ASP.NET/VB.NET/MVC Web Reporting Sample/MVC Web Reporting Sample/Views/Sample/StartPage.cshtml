@using combit.Reporting.Repository

@model MVC_Web_Reporting_Sample.WebReporting.ViewModels.StartPageModel

@{
    ViewBag.Title = "View Repository";

    // D:   Sortiere die Liste der Repository-Items
    // US:  Sort the repository item list
    var orderedRepositoryItems = Model.RepositoryItems.OrderBy(i => i.ExtractDisplayName() ?? i.InternalID);
}

<div style="margin: 5px 10px">
    <span style="font-weight: 200; color: #808080; font-size: 1.1em;">Choose a report</span>
    <img src="~/Content/images/ArrowUpGray.png" />
</div>

@Html.Raw(File.ReadAllText(Server.MapPath("~/Readme.html")))
<br />

<div style="max-width: 1300px; margin:auto">
    <button id="btnShowRepositoryItems" onclick="$('#RepositoryItemList').slideDown(); $('#btnShowRepositoryItems').hide()" data-mini="true" data-inline="true" data-icon="search">Show Repository Items</button>

    <div id="RepositoryItemList" style="display: none">
        <h4>Repository Items</h4>

        @foreach (var repoItem in orderedRepositoryItems)
        {
            // D:   Lese den Anzeigenamen des Repository-Items aus. Dieser ist optional und kann null sein! Daher Fallback auf die Repository-ID.
            // US:  Get the repository item's display name. This name is optional and may be null! So fallback to the repository ID.
            string itemName = repoItem.ExtractDisplayName() ?? (repoItem.InternalID + " (no display name defined)");

            <div data-role="collapsible" data-mini="true">
                <h4>@itemName</h4>

                <table class="RepositoryItemTable">
                    <tr>
                        <td>ID:</td>
                        <td>@repoItem.InternalID</td>
                        <td>Author:</td>
                        <td>@repoItem.Author</td>
                    </tr>
                    <tr>
                        <td>Type:</td>
                        <td>@repoItem.Type</td>
                        <td>Last Modification:</td>
                        <td>@repoItem.LastModificationUTC.ToLocalTime()</td>
                    </tr>
                </table>
                <div style="text-align: right">
                    @if (RepositoryItemType.IsProjectType(repoItem.Type, false))   // Show Designer/Html5Viewer links only for project files
                    {
                        <a href="@Url.Action("Html5Viewer", "Sample", new { reportRepositoryID = repoItem.InternalID })" data-ajax="false" data-role="button" data-mini="true" data-inline="true">HTML5 Viewer</a>
                        <a href="@Url.Action("WebDesignerLauncher", "Sample", new { reportRepositoryID = repoItem.InternalID })" data-ajax="false" data-role="button" data-mini="true" data-inline="true">Design</a>
                    }
                    <a href="@Url.Action("DownloadRepositoryItem", "Sample", new { repoItemId = repoItem.InternalID})" data-ajax="false" data-role="button" data-mini="true" data-inline="true">Download</a>
                    <a href="@Url.Action("DeleteRepositoryItem", "Sample", new { repoItemId = repoItem.InternalID})" data-ajax="false" data-role="button" data-mini="true" data-inline="true">Delete</a>
                </div>
            </div>
        }
    </div>
</div>


<div id="CreateProjectPopup" data-role="popup" data-position-to="window">
    <div data-role="header">
        <h4>Create Project</h4>
    </div>
    <form action="@Url.Action("CreateProject", "Sample")" method="post"></form>
</div>
