@using Microsoft.AspNetCore.Components
@using combit.Reporting.Repository
@using WebReporting



<select id="ReportRepositoryID" onchange="webReportViewer()" style="text-align:left" class="btn btn-light"> 
    @foreach (var reportName in reportNameList)
    {
        <option value=@reportName.Item1>@reportName.Item2</option>
    }
</select>




@code {
    List<Tuple<string, string>> reportNameList = new List<Tuple<string, string>>();

    protected override void OnInitialized()
    {
        IEnumerable<CustomizedRepostoryItem> Model = WebReporting.Controllers.SampleController.GetCurrentRepository().GetAllItems().OfType<CustomizedRepostoryItem>();

        // D:   Bereite die Liste der Reports für die Headerleiste vor.
        // US:  Build the list of reports for the header bar.

        foreach (var repositoryItem in Model)
        {
            // D:   Ignoriere Repository-Items, die keine List & Label Projekte sind.
            // US:  Ignore repository items that are not a List & Label project.
            if (!RepositoryItemType.IsProjectType(repositoryItem.Type, false))
            {
                continue;
            }

            // D:   Ignoriere Projekte, für die das ShowInToolbar-Flag nicht gesetzt wurde (z.B. Drilldown-Projekte).
            // US:  Ignore projects without the ShowInToolbar-flag (e.g. drilldown projects).
            if (!repositoryItem.ShowInToolbar)
            {
                continue;
            }

            // D:   Lese den Anzeigenamen des Repository-Items aus. Dieser ist optional und kann null sein! Daher Fallback auf die Repository-ID.
            // US:  Get the repository item's display name. This name is optional and may be null! So fallback to the repository ID.
            string reportName = repositoryItem.ExtractDisplayName() ?? repositoryItem.InternalID;

            reportNameList.Add(new Tuple<string, string>(repositoryItem.InternalID, reportName));

        }

        // D:   Sortiere die Liste der Repository-Items alphabetisch nach Anzeigename.
        // US:  Sort the repository item list alphabetically by the display name.
        reportNameList.Sort((a, b) => a.Item2.CompareTo(b.Item2));
    }
}