// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "lul.h"

/////////////////////////////////////////////////////////////////////////////
// CLul

IMPLEMENT_DYNCREATE(CLul, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CLul properties

long CLul::GetLanguage()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CLul::SetLanguage(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CLul::GetDialogMode()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CLul::SetDialogMode(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

long CLul::GetDialogFrame()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CLul::SetDialogFrame(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

long CLul::GetDialog3DText()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CLul::SetDialog3DText(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

long CLul::GetDialogButtons()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CLul::SetDialogButtons(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

BOOL CLul::GetEnablePageCallback()
{
	BOOL result;
	GetProperty(0x8, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetEnablePageCallback(BOOL propVal)
{
	SetProperty(0x8, VT_BOOL, propVal);
}

BOOL CLul::GetEnableProjectCallback()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetEnableProjectCallback(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

BOOL CLul::GetEnableObjectCallback()
{
	BOOL result;
	GetProperty(0xa, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetEnableObjectCallback(BOOL propVal)
{
	SetProperty(0xa, VT_BOOL, propVal);
}

long CLul::GetNewExpressions()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CLul::SetNewExpressions(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

BOOL CLul::GetEnableHelpCallback()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetEnableHelpCallback(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

BOOL CLul::GetOnlyOneTable()
{
	BOOL result;
	GetProperty(0xd, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetOnlyOneTable(BOOL propVal)
{
	SetProperty(0xd, VT_BOOL, propVal);
}

BOOL CLul::GetMultipleTableLines()
{
	BOOL result;
	GetProperty(0xe, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetMultipleTableLines(BOOL propVal)
{
	SetProperty(0xe, VT_BOOL, propVal);
}

long CLul::GetTableColoring()
{
	long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CLul::SetTableColoring(long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

long CLul::GetTabStops()
{
	long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CLul::SetTabStops(long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

BOOL CLul::GetSortVariables()
{
	BOOL result;
	GetProperty(0x11, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetSortVariables(BOOL propVal)
{
	SetProperty(0x11, VT_BOOL, propVal);
}

BOOL CLul::GetHelpAvailable()
{
	BOOL result;
	GetProperty(0x12, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetHelpAvailable(BOOL propVal)
{
	SetProperty(0x12, VT_BOOL, propVal);
}

BOOL CLul::GetShowPredefVars()
{
	BOOL result;
	GetProperty(0x14, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetShowPredefVars(BOOL propVal)
{
	SetProperty(0x14, VT_BOOL, propVal);
}

BOOL CLul::GetUseHostprinter()
{
	BOOL result;
	GetProperty(0x15, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetUseHostprinter(BOOL propVal)
{
	SetProperty(0x15, VT_BOOL, propVal);
}

long CLul::GetEMFResolution()
{
	long result;
	GetProperty(0x16, VT_I4, (void*)&result);
	return result;
}

void CLul::SetEMFResolution(long propVal)
{
	SetProperty(0x16, VT_I4, propVal);
}

BOOL CLul::GetAddVarsToFields()
{
	BOOL result;
	GetProperty(0x17, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetAddVarsToFields(BOOL propVal)
{
	SetProperty(0x17, VT_BOOL, propVal);
}

BOOL CLul::GetConvertCRLF()
{
	BOOL result;
	GetProperty(0x18, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetConvertCRLF(BOOL propVal)
{
	SetProperty(0x18, VT_BOOL, propVal);
}

BOOL CLul::GetWizFileNew()
{
	BOOL result;
	GetProperty(0x19, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetWizFileNew(BOOL propVal)
{
	SetProperty(0x19, VT_BOOL, propVal);
}

BOOL CLul::GetVarsCaseSensitive()
{
	BOOL result;
	GetProperty(0x1a, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetVarsCaseSensitive(BOOL propVal)
{
	SetProperty(0x1a, VT_BOOL, propVal);
}

BOOL CLul::GetRealTime()
{
	BOOL result;
	GetProperty(0x1b, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetRealTime(BOOL propVal)
{
	SetProperty(0x1b, VT_BOOL, propVal);
}

BOOL CLul::GetSpaceOptimization()
{
	BOOL result;
	GetProperty(0x1c, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetSpaceOptimization(BOOL propVal)
{
	SetProperty(0x1c, VT_BOOL, propVal);
}

BOOL CLul::GetCompressStorage()
{
	BOOL result;
	GetProperty(0x1d, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetCompressStorage(BOOL propVal)
{
	SetProperty(0x1d, VT_BOOL, propVal);
}

BOOL CLul::GetNoParameterCheck()
{
	BOOL result;
	GetProperty(0x1e, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetNoParameterCheck(BOOL propVal)
{
	SetProperty(0x1e, VT_BOOL, propVal);
}

BOOL CLul::GetNoNoTableCheck()
{
	BOOL result;
	GetProperty(0x1f, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetNoNoTableCheck(BOOL propVal)
{
	SetProperty(0x1f, VT_BOOL, propVal);
}

long CLul::GetPreviewZoomPerc()
{
	long result;
	GetProperty(0x20, VT_I4, (void*)&result);
	return result;
}

void CLul::SetPreviewZoomPerc(long propVal)
{
	SetProperty(0x20, VT_I4, propVal);
}

long CLul::GetPreviewRectLeft()
{
	long result;
	GetProperty(0x21, VT_I4, (void*)&result);
	return result;
}

void CLul::SetPreviewRectLeft(long propVal)
{
	SetProperty(0x21, VT_I4, propVal);
}

long CLul::GetPreviewRectTop()
{
	long result;
	GetProperty(0x22, VT_I4, (void*)&result);
	return result;
}

void CLul::SetPreviewRectTop(long propVal)
{
	SetProperty(0x22, VT_I4, propVal);
}

long CLul::GetPreviewRectWidth()
{
	long result;
	GetProperty(0x23, VT_I4, (void*)&result);
	return result;
}

void CLul::SetPreviewRectWidth(long propVal)
{
	SetProperty(0x23, VT_I4, propVal);
}

long CLul::GetPreviewRectHeight()
{
	long result;
	GetProperty(0x24, VT_I4, (void*)&result);
	return result;
}

void CLul::SetPreviewRectHeight(long propVal)
{
	SetProperty(0x24, VT_I4, propVal);
}

long CLul::GetMetric()
{
	long result;
	GetProperty(0x25, VT_I4, (void*)&result);
	return result;
}

void CLul::SetMetric(long propVal)
{
	SetProperty(0x25, VT_I4, propVal);
}

short CLul::GetTabRepresentationCode()
{
	short result;
	GetProperty(0x26, VT_I2, (void*)&result);
	return result;
}

void CLul::SetTabRepresentationCode(short propVal)
{
	SetProperty(0x26, VT_I2, propVal);
}

short CLul::GetRetRepresentationCode()
{
	short result;
	GetProperty(0x27, VT_I2, (void*)&result);
	return result;
}

void CLul::SetRetRepresentationCode(short propVal)
{
	SetProperty(0x27, VT_I2, propVal);
}

long CLul::GetStorageSystem()
{
	long result;
	GetProperty(0x28, VT_I4, (void*)&result);
	return result;
}

void CLul::SetStorageSystem(long propVal)
{
	SetProperty(0x28, VT_I4, propVal);
}

BOOL CLul::GetAutoMultipage()
{
	BOOL result;
	GetProperty(0x29, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetAutoMultipage(BOOL propVal)
{
	SetProperty(0x29, VT_BOOL, propVal);
}

BOOL CLul::GetUseBarcodeSizes()
{
	BOOL result;
	GetProperty(0x2a, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetUseBarcodeSizes(BOOL propVal)
{
	SetProperty(0x2a, VT_BOOL, propVal);
}

short CLul::GetMaxRTFVersion()
{
	short result;
	GetProperty(0x2b, VT_I2, (void*)&result);
	return result;
}

void CLul::SetMaxRTFVersion(short propVal)
{
	SetProperty(0x2b, VT_I2, propVal);
}

BOOL CLul::GetDelayTableHeader()
{
	BOOL result;
	GetProperty(0x2c, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetDelayTableHeader(BOOL propVal)
{
	SetProperty(0x2c, VT_BOOL, propVal);
}

BOOL CLul::GetOfnDialogExplorer()
{
	BOOL result;
	GetProperty(0x2d, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetOfnDialogExplorer(BOOL propVal)
{
	SetProperty(0x2d, VT_BOOL, propVal);
}

BOOL CLul::GetCreateInfo()
{
	BOOL result;
	GetProperty(0x2e, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetCreateInfo(BOOL propVal)
{
	SetProperty(0x2e, VT_BOOL, propVal);
}

BOOL CLul::GetXlatVarNames()
{
	BOOL result;
	GetProperty(0x2f, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetXlatVarNames(BOOL propVal)
{
	SetProperty(0x2f, VT_BOOL, propVal);
}

short CLul::GetPhantomSpaceRepresentationCode()
{
	short result;
	GetProperty(0x30, VT_I2, (void*)&result);
	return result;
}

void CLul::SetPhantomSpaceRepresentationCode(short propVal)
{
	SetProperty(0x30, VT_I2, propVal);
}

short CLul::GetLockNextCharRepresentationCode()
{
	short result;
	GetProperty(0x31, VT_I2, (void*)&result);
	return result;
}

void CLul::SetLockNextCharRepresentationCode(short propVal)
{
	SetProperty(0x31, VT_I2, propVal);
}

short CLul::GetExprSepRepresentationCode()
{
	short result;
	GetProperty(0x32, VT_I2, (void*)&result);
	return result;
}

void CLul::SetExprSepRepresentationCode(short propVal)
{
	SetProperty(0x32, VT_I2, propVal);
}

short CLul::GetTextQuoteRepresentationCode()
{
	short result;
	GetProperty(0x33, VT_I2, (void*)&result);
	return result;
}

void CLul::SetTextQuoteRepresentationCode(short propVal)
{
	SetProperty(0x33, VT_I2, propVal);
}

BOOL CLul::GetInterCharSpacing()
{
	BOOL result;
	GetProperty(0x34, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetInterCharSpacing(BOOL propVal)
{
	SetProperty(0x34, VT_BOOL, propVal);
}

BOOL CLul::GetIncludeFontDescent()
{
	BOOL result;
	GetProperty(0x35, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetIncludeFontDescent(BOOL propVal)
{
	SetProperty(0x35, VT_BOOL, propVal);
}

BOOL CLul::GetUseChartFields()
{
	BOOL result;
	GetProperty(0x37, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetUseChartFields(BOOL propVal)
{
	SetProperty(0x37, VT_BOOL, propVal);
}

CString CLul::GetProjectPassword()
{
	CString result;
	GetProperty(0x39, VT_BSTR, (void*)&result);
	return result;
}

void CLul::SetProjectPassword(LPCTSTR propVal)
{
	SetProperty(0x39, VT_BSTR, propVal);
}

CString CLul::GetLicensingInfo()
{
	CString result;
	GetProperty(0x3a, VT_BSTR, (void*)&result);
	return result;
}

void CLul::SetLicensingInfo(LPCTSTR propVal)
{
	SetProperty(0x3a, VT_BSTR, propVal);
}

BOOL CLul::GetIncrementalPreview()
{
	BOOL result;
	GetProperty(0x3b, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetIncrementalPreview(BOOL propVal)
{
	SetProperty(0x3b, VT_BOOL, propVal);
}

BOOL CLul::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CLul::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CLul operations

long CLul::LlGetVersion(long nCmd)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCmd);
	return result;
}

void CLul::LlSetDebug(long nFlags)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nFlags);
}

long CLul::LlDefineField(LPCTSTR sVarName, LPCTSTR sContent)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x3f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName, sContent);
	return result;
}

long CLul::LlDefineVariable(LPCTSTR sVarName, LPCTSTR sContent)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x40, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName, sContent);
	return result;
}

long CLul::LlDefineFieldExt(LPCTSTR sVarName, LPCTSTR sContent, long nFieldType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0x41, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName, sContent, nFieldType);
	return result;
}

long CLul::LlDefineVariableExt(LPCTSTR sVarName, LPCTSTR sContent, long nFieldType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0x42, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName, sContent, nFieldType);
	return result;
}

void CLul::LlDefineFieldStart()
{
	InvokeHelper(0x43, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CLul::LlDefineVariableStart()
{
	InvokeHelper(0x44, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CLul::LlDefineSumVariable(LPCTSTR sVarName, LPCTSTR sContent)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x45, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName, sContent);
	return result;
}

long CLul::LlDefineFieldExtHandle(LPCTSTR sVarName, long hContent, long nFieldType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x46, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName, hContent, nFieldType);
	return result;
}

long CLul::LlDefineVariableExtHandle(LPCTSTR sVarName, long hContent, long nFieldType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x47, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName, hContent, nFieldType);
	return result;
}

long CLul::LlDefineLayout(long hWnd, LPCTSTR sTitle, long nObjType, LPCTSTR sObjName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_BSTR;
	InvokeHelper(0x48, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, sTitle, nObjType, sObjName);
	return result;
}

long CLul::LlPrint()
{
	long result;
	InvokeHelper(0x49, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintAbort()
{
	long result;
	InvokeHelper(0x4a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintFields()
{
	long result;
	InvokeHelper(0x4b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintFieldsEnd()
{
	long result;
	InvokeHelper(0x4c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintEnd(long nPages)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nPages);
	return result;
}

long CLul::LlPrintGetCurrentPage()
{
	long result;
	InvokeHelper(0x4e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CLul::LlPrintCheckLineFit()
{
	BOOL result;
	InvokeHelper(0x4f, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintGetItemsPerPage()
{
	long result;
	InvokeHelper(0x50, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintGetItemsPerTable()
{
	long result;
	InvokeHelper(0x51, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintGetRemItemsPerTable(LPCTSTR sField)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x52, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sField);
	return result;
}

long CLul::LlPreviewSetTempPath(LPCTSTR sPath)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x53, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sPath);
	return result;
}

long CLul::LlPreviewDeleteFiles(LPCTSTR sObjName, LPCTSTR sPath)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x54, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sObjName, sPath);
	return result;
}

long CLul::LlPreviewDisplay(LPCTSTR sObjName, LPCTSTR sPath, long hWnd)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0x55, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sObjName, sPath, hWnd);
	return result;
}

long CLul::LlPreviewDisplayEx(LPCTSTR sObjName, LPCTSTR sPath, long hWnd, long nOptions)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x56, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sObjName, sPath, hWnd, nOptions);
	return result;
}

long CLul::LlSetOption(long nMode, long nValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x57, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMode, nValue);
	return result;
}

long CLul::LlPrinterSetup(long hWnd, long nObjType, LPCTSTR sObjName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x58, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, nObjType, sObjName);
	return result;
}

long CLul::LlPrintSetBoxText(LPCTSTR sText, long nPercentage)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x59, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sText, nPercentage);
	return result;
}

long CLul::LlPrintIsVariableUsed(LPCTSTR sVarName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x5a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName);
	return result;
}

long CLul::LlPrintIsFieldUsed(LPCTSTR sFieldName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x5b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sFieldName);
	return result;
}

long CLul::LlPrintEnableObject(LPCTSTR sObjName, long bEnable)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x5c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sObjName, bEnable);
	return result;
}

long CLul::LlPrintWillMatchFilter()
{
	long result;
	InvokeHelper(0x5d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintDidMatchFilter()
{
	long result;
	InvokeHelper(0x5e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintStart(long nObjType, LPCTSTR sObjName, long nPrintOptions)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x5f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nObjType, sObjName, nPrintOptions);
	return result;
}

long CLul::LlPrintWithBoxStart(long nObjType, LPCTSTR sObjName, long nPrintOptions, long nBoxType, long hWnd, LPCTSTR sTitle)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x60, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nObjType, sObjName, nPrintOptions, nBoxType, hWnd, sTitle);
	return result;
}

long CLul::LlPrintOptionsDialog(long hWnd, LPCTSTR sText)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x61, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, sText);
	return result;
}

long CLul::LlSetPrinterDefaultsDir(LPCTSTR sDir)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x62, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sDir);
	return result;
}

long CLul::LlAddCtlSupport(long hWnd, long nFlags, LPCTSTR sIniFile)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x63, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, nFlags, sIniFile);
	return result;
}

long CLul::LlSetFileExtensions(long nObjType, LPCTSTR sObjectExt, LPCTSTR sPrinterExt, LPCTSTR sSketchExt)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x64, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nObjType, sObjectExt, sPrinterExt, sSketchExt);
	return result;
}

long CLul::LlSetPrinterToDefault(long nObjType, LPCTSTR sObjName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x65, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nObjType, sObjName);
	return result;
}

long CLul::LlPrintSetOption(long nIndex, long nValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x66, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, nValue);
	return result;
}

long CLul::LlPrintOptionsDialogTitle(long hWnd, LPCTSTR sTitle, LPCTSTR sText)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0x67, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, sTitle, sText);
	return result;
}

long CLul::LlDefineSortOrderStart()
{
	long result;
	InvokeHelper(0x68, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlDefineSortOrder(LPCTSTR sIdentifier, LPCTSTR sText)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x69, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sIdentifier, sText);
	return result;
}

long CLul::LlPrintGetSortOrder(BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x6a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		psBuffer);
	return result;
}

long CLul::LlDefineGrouping(LPCTSTR sSortorder, LPCTSTR sIdentifier, LPCTSTR sText)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x6b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sSortorder, sIdentifier, sText);
	return result;
}

long CLul::LlPrintGetGrouping(BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x6c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		psBuffer);
	return result;
}

long CLul::LlGetOption(long nMode)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x6d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMode);
	return result;
}

long CLul::LlSetOptionString(long nIndex, LPCTSTR sBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x6e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, sBuffer);
	return result;
}

long CLul::LlGetOptionString(long nIndex, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR;
	InvokeHelper(0x6f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, psBuffer);
	return result;
}

long CLul::LlGetVariableContents(LPCTSTR sName, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR;
	InvokeHelper(0x70, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sName, psBuffer);
	return result;
}

long CLul::LlGetFieldContents(LPCTSTR sName, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR;
	InvokeHelper(0x71, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sName, psBuffer);
	return result;
}

long CLul::LlGetSumVariableContents(LPCTSTR sName, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR;
	InvokeHelper(0x72, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sName, psBuffer);
	return result;
}

long CLul::LlGetUserVariableContents(LPCTSTR sName, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR;
	InvokeHelper(0x73, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sName, psBuffer);
	return result;
}

long CLul::LlGetVariableType(LPCTSTR sName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x74, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sName);
	return result;
}

long CLul::LlGetFieldType(LPCTSTR sName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x75, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sName);
	return result;
}

long CLul::LlPrintGetOption(long nIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x76, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex);
	return result;
}

long CLul::LlPrintGetPrinterInfo(BSTR* psPrn, BSTR* psPort)
{
	long result;
	static BYTE parms[] =
		VTS_PBSTR VTS_PBSTR;
	InvokeHelper(0x77, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		psPrn, psPort);
	return result;
}

long CLul::LlPrintGetFilterExpression(BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x78, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		psBuffer);
	return result;
}

long CLul::LlSelectFileDlg(long hWnd, long nObjType, BSTR* psObjName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PBSTR;
	InvokeHelper(0x79, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, nObjType, psObjName);
	return result;
}

long CLul::LlSelectFileDlgTitle(long hWnd, LPCTSTR sTitle, long nObjType, BSTR* psObjName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_PBSTR;
	InvokeHelper(0x7a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, sTitle, nObjType, psObjName);
	return result;
}

long CLul::LlPrintSelectOffset(long hWnd)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd);
	return result;
}

long CLul::LlDesignerProhibitAction(long nMenuID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMenuID);
	return result;
}

long CLul::LlExprParse(LPCTSTR sExprText, long bTablefields)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x7d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sExprText, bTablefields);
	return result;
}

long CLul::LlExprType(long nptrExpr)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nptrExpr);
	return result;
}

void CLul::LlExprError(BSTR* psBuffer)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 psBuffer);
}

void CLul::LlExprFree(long nptrExpr)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x80, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nptrExpr);
}

long CLul::LlExprEvaluate(long nptrExpr, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR;
	InvokeHelper(0x81, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nptrExpr, psBuffer);
	return result;
}

long CLul::LlDlgEditLineEx(long hWnd, BSTR* psBuffer, long nParaTypes, LPCTSTR sTitle, long bTable)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x82, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWnd, psBuffer, nParaTypes, sTitle, bTable);
	return result;
}

long CLul::LlSetDecimalChar(long cDecPoint)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x83, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		cDecPoint);
	return result;
}

long CLul::LlCreateSketch(long nObjType, LPCTSTR sObjName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x84, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nObjType, sObjName);
	return result;
}

long CLul::LlViewerProhibitAction(long nMenuID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x85, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMenuID);
	return result;
}

long CLul::LlPrintCopyPrinterConfiguration(LPCTSTR sFileName, long nFunction)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x86, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sFileName, nFunction);
	return result;
}

long CLul::LlStgsysStorageOpen(LPCTSTR sFileName, LPCTSTR sTempPath, long bReadOnly, long bOneJobTranslation)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x87, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sFileName, sTempPath, bReadOnly, bOneJobTranslation);
	return result;
}

void CLul::LlStgsysStorageClose(long hStg)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x88, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hStg);
}

long CLul::LlStgsysGetAPIVersion(long hStg)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x89, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg);
	return result;
}

long CLul::LlStgsysGetFileVersion(long hStg)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg);
	return result;
}

long CLul::LlStgsysGetJobCount(long hStg)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg);
	return result;
}

long CLul::LlStgsysGetPageCount(long hStg)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg);
	return result;
}

long CLul::LlStgsysGetLastError(long hStg)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg);
	return result;
}

long CLul::LlStgsysDeleteFiles(long hStg)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg);
	return result;
}

long CLul::LlStgsysAppend(long hStg, long hStgToAppend)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x8f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, hStgToAppend);
	return result;
}

long CLul::LlStgsysSetJob(long hStg, long nJob)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x90, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, nJob);
	return result;
}

long CLul::LlStgsysGetFilename(long hStg, long nJob, long nFile, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_PBSTR;
	InvokeHelper(0x91, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, nJob, nFile, psBuffer);
	return result;
}

long CLul::LlStgsysGetJobOptionValue(long hStg, long nOption)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x92, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, nOption);
	return result;
}

long CLul::LlStgsysGetPageOptionValue(long hStg, long nPageIndex, long nOption)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x93, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, nPageIndex, nOption);
	return result;
}

long CLul::LlStgsysSetPageOptionString(long hStg, long nPageIndex, long nOption, LPCTSTR sBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x94, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, nPageIndex, nOption, sBuffer);
	return result;
}

long CLul::LlStgsysGetPageOptionString(long hStg, long nPageIndex, long nOption, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_PBSTR;
	InvokeHelper(0x95, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, nPageIndex, nOption, psBuffer);
	return result;
}

long CLul::LlStgsysGetPageMetafile(long hStg, long nPageIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x96, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, nPageIndex);
	return result;
}

long CLul::LlStgsysGetPageMetafile16(long hStg, long nPageIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x97, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, nPageIndex);
	return result;
}

long CLul::LlStgsysDestroyMetafile(long hMF)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x98, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hMF);
	return result;
}

long CLul::LlStgsysDrawPage(long hStg, long hDC, long hPrnDC, long bAskPrinter, long left, long top, long right, long bottom, long nPageIndex, long bFit)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x99, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, hDC, hPrnDC, bAskPrinter, left, top, right, bottom, nPageIndex, bFit);
	return result;
}

long CLul::LlPrintSetOptionString(long nIndex, LPCTSTR sBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x9a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, sBuffer);
	return result;
}

long CLul::LlPrintGetOptionString(long nIndex, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR;
	InvokeHelper(0x9b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, psBuffer);
	return result;
}

long CLul::Design(long nUserData, long hWnd, LPCTSTR sTitle, long nObjType, LPCTSTR sObjName, long bWithFileSelect)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x9c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nUserData, hWnd, sTitle, nObjType, sObjName, bWithFileSelect);
	return result;
}

long CLul::Print(long nUserData, long nObjType, LPCTSTR sObjName, long bWithFileSelect, long nPrintOptions, long nBoxType, long hWnd, LPCTSTR sTitle, long bShowPrintOptionsDlg, LPCTSTR sTempPath)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_I4 VTS_BSTR;
	InvokeHelper(0x9d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nUserData, nObjType, sObjName, bWithFileSelect, nPrintOptions, nBoxType, hWnd, sTitle, bShowPrintOptionsDlg, sTempPath);
	return result;
}

void CLul::LlDebugOutput(long nIdent, LPCTSTR sText)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x9e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nIdent, sText);
}

long CLul::LlEnumGetFirstVar(long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nFlags);
	return result;
}

long CLul::LlEnumGetFirstField(long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nFlags);
	return result;
}

long CLul::LlEnumGetNextEntry(long nPos, long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xa1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nPos, nFlags);
	return result;
}

long CLul::LlEnumGetEntry(long nPos, BSTR* psName, BSTR* psContents, long* pHandle, long* pnType)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR VTS_PBSTR VTS_PI4 VTS_PI4;
	InvokeHelper(0xa2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nPos, psName, psContents, pHandle, pnType);
	return result;
}

long CLul::LlXGetParameter(long nExtensionType, LPCTSTR sExtensionName, LPCTSTR sKey, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR VTS_PBSTR;
	InvokeHelper(0xa3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nExtensionType, sExtensionName, sKey, psBuffer);
	return result;
}

long CLul::LlXSetParameter(long nExtensionType, LPCTSTR sExtensionName, LPCTSTR sKey, LPCTSTR sValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xa4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nExtensionType, sExtensionName, sKey, sValue);
	return result;
}

long CLul::LlPrintResetObjectStates()
{
	long result;
	InvokeHelper(0xa5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlStgsysPrint(long hStg, LPCTSTR sPrinterName1, LPCTSTR sPrinterName2, long nStartPageIndex, long nEndPageIndex, long nCopies, long nFlags, LPCTSTR sMessage, long hWnd)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0xa6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, sPrinterName1, sPrinterName2, nStartPageIndex, nEndPageIndex, nCopies, nFlags, sMessage, hWnd);
	return result;
}

long CLul::LlStgsysStoragePrint(LPCTSTR sFileName, LPCTSTR sTempPath, LPCTSTR sPrinterName1, LPCTSTR sPrinterName2, long nStartPageIndex, long nEndPageIndex, long nCopies, long nFlags, LPCTSTR sMessage, long hWnd)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0xa7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sFileName, sTempPath, sPrinterName1, sPrinterName2, nStartPageIndex, nEndPageIndex, nCopies, nFlags, sMessage, hWnd);
	return result;
}

long CLul::LlPrintResetProjectState()
{
	long result;
	InvokeHelper(0xa8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlSetPrinterInPrinterFile(long nObjType, LPCTSTR sObjName, long nPrinter, LPCTSTR sPrinter, long pDevMode)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0xa9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nObjType, sObjName, nPrinter, sPrinter, pDevMode);
	return result;
}

long CLul::LlDesignerProhibitFunction(LPCTSTR sFunctionName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xaa, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sFunctionName);
	return result;
}

long CLul::LlDefineChartFieldExt(LPCTSTR sVarName, LPCTSTR sContent, long nFieldType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0xab, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sVarName, sContent, nFieldType);
	return result;
}

long CLul::LlDefineChartFieldStart()
{
	long result;
	InvokeHelper(0xac, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintDeclareChartRow(long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xad, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nFlags);
	return result;
}

long CLul::LlPrintIsChartFieldUsed(LPCTSTR sFieldName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xae, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sFieldName);
	return result;
}

long CLul::LlGetChartFieldContents(LPCTSTR sName, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR;
	InvokeHelper(0xaf, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sName, psBuffer);
	return result;
}

long CLul::LlEnumGetFirstChartField(long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nFlags);
	return result;
}

long CLul::LlPrintGetChartObjectCount(long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nFlags);
	return result;
}

long CLul::LlRTFCreateObject()
{
	long result;
	InvokeHelper(0xb2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlRTFDeleteObject(long hRTFObj)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hRTFObj);
	return result;
}

long CLul::LlRTFSetText(long hRTFObj, LPCTSTR sText)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xb4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hRTFObj, sText);
	return result;
}

long CLul::LlRTFGetTextLength(long hRTFObj, long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xb5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hRTFObj, nFlags);
	return result;
}

long CLul::LlRTFGetText(long hRTFObj, long nFlags, BSTR* psText)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PBSTR;
	InvokeHelper(0xb6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hRTFObj, nFlags, psText);
	return result;
}

long CLul::LlRTFEditObject(long hRTFObj, long hWnd, long hPrnDC, long nProjectType, long bModal)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xb7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hRTFObj, hWnd, hPrnDC, nProjectType, bModal);
	return result;
}

long CLul::LlRTFCopyToClipboard(long hRTFObj)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hRTFObj);
	return result;
}

long CLul::LlPrintGetRemainingSpacePerTable(LPCTSTR sField, long nDimension)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0xb9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sField, nDimension);
	return result;
}

long CLul::LlRTFDisplay(long hRTFObj, long hDC, long* left, long* top, long* right, long* bottom, long bRestart, long* pnState)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_I4 VTS_PI4;
	InvokeHelper(0xba, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hRTFObj, hDC, left, top, right, bottom, bRestart, pnState);
	return result;
}

long CLul::LlStgsysConvert(long hStg, LPCTSTR sDestFilename, LPCTSTR sFormat)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0xbb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hStg, sDestFilename, sFormat);
	return result;
}

long CLul::LlSetDefaultProjectParameter(LPCTSTR sParam, LPCTSTR sValue, long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0xbc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sParam, sValue, nFlags);
	return result;
}

long CLul::LsMailConfigurationDialog(long hWndParent, LPCTSTR sSubKey, long nFlags, long nLanguage)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0xbd, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWndParent, sSubKey, nFlags, nLanguage);
	return result;
}

long CLul::LlDbAddTable(LPCTSTR sTableID, LPCTSTR sDisplayName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xbe, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sTableID, sDisplayName);
	return result;
}

long CLul::LlDbAddTableRelation(LPCTSTR sTableID, LPCTSTR sParentTableID, LPCTSTR sRelationID, LPCTSTR sRelationDisplayName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xbf, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sTableID, sParentTableID, sRelationID, sRelationDisplayName);
	return result;
}

long CLul::LlDbAddTableSortOrder(LPCTSTR sTableID, LPCTSTR sSortOrderID, LPCTSTR sSortOrderDisplayName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xc0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sTableID, sSortOrderID, sSortOrderDisplayName);
	return result;
}

long CLul::LlDbSetMasterTable(LPCTSTR sTableID)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sTableID);
	return result;
}

long CLul::LlPrintDbGetCurrentTable(BSTR* psTableID, long bCompletePath)
{
	long result;
	static BYTE parms[] =
		VTS_PBSTR VTS_I4;
	InvokeHelper(0xc2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		psTableID, bCompletePath);
	return result;
}

long CLul::LlPrintDbGetCurrentTableSortOrder(BSTR* psSortOrderID)
{
	long result;
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0xc3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		psSortOrderID);
	return result;
}

long CLul::LlPrintDbGetCurrentTableRelation(BSTR* psRelationID)
{
	long result;
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0xc4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		psRelationID);
	return result;
}

long CLul::LlPrintDbGetRootTableCount()
{
	long result;
	InvokeHelper(0xc5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlPrintSetProjectParameter(LPCTSTR sParam, LPCTSTR sValue, long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0xc6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sParam, sValue, nFlags);
	return result;
}

long CLul::LlPrintGetProjectParameter(LPCTSTR sParam, long bEvaluated, BSTR* psValue, long* pnFlags)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_PBSTR VTS_PI4;
	InvokeHelper(0xc7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sParam, bEvaluated, psValue, pnFlags);
	return result;
}

long CLul::LlGetDefaultProjectParameter(LPCTSTR sParam, BSTR* psValue, long* pnFlags)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR VTS_PI4;
	InvokeHelper(0xc8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sParam, psValue, pnFlags);
	return result;
}

long CLul::LlDesignerProhibitEditingObject(LPCTSTR sObject)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sObject);
	return result;
}

long CLul::LsMailJobOpen(long nLanguage)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xca, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLanguage);
	return result;
}

long CLul::LsMailJobClose(long hMailJob)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xcb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hMailJob);
	return result;
}

long CLul::LsMailSetOptionString(long hMailJob, LPCTSTR sKey, LPCTSTR sValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0xcc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hMailJob, sKey, sValue);
	return result;
}

long CLul::LsMailSendFile(long hMailJob, long hWndParent)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xcd, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hMailJob, hWndParent);
	return result;
}

long CLul::LlGetUsedIdentifiers(LPCTSTR sProjectName, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR;
	InvokeHelper(0xce, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sProjectName, psBuffer);
	return result;
}

long CLul::LlDictionaryAdd(long nDictionaryType, LPCTSTR sName, LPCTSTR sNameTranslated)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0xd3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDictionaryType, sName, sNameTranslated);
	return result;
}

long CLul::LlDictionariesClear()
{
	long result;
	InvokeHelper(0xd4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlDomGetProject(long* phDOMObj)
{
	long result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0xd5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		phDOMObj);
	return result;
}

long CLul::LlDomGetProperty(long hDOMObj, LPCTSTR sName, BSTR* psValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_PBSTR;
	InvokeHelper(0xd6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hDOMObj, sName, psValue);
	return result;
}

long CLul::LlDomSetProperty(long hDOMObj, LPCTSTR sName, LPCTSTR sValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0xd7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hDOMObj, sName, sValue);
	return result;
}

long CLul::LlDomGetObject(long hDOMObj, LPCTSTR sName, long* phDOMObj)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_PI4;
	InvokeHelper(0xd8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hDOMObj, sName, phDOMObj);
	return result;
}

long CLul::LlDomGetSubobject(long hDOMObj, long nPosition, long* phDOMObj)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4;
	InvokeHelper(0xd9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hDOMObj, nPosition, phDOMObj);
	return result;
}

long CLul::LlDomCreateSubobject(long hDOMObj, long nPosition, LPCTSTR sType, long* phDOMObj)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_PI4;
	InvokeHelper(0xda, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hDOMObj, nPosition, sType, phDOMObj);
	return result;
}

long CLul::LlDomDeleteSubobject(long hDOMObj, long nPosition)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xdb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hDOMObj, nPosition);
	return result;
}

long CLul::LlProjectOpen(long nObjType, LPCTSTR sProjectName, long nOpenMode)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0xdc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nObjType, sProjectName, nOpenMode);
	return result;
}

long CLul::LlProjectSave(LPCTSTR sProjectName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xdd, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sProjectName);
	return result;
}

long CLul::LlProjectClose()
{
	long result;
	InvokeHelper(0xde, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlAssociatePreviewControl(long hWndControl, long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xdf, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hWndControl, nFlags);
	return result;
}

long CLul::LlGetErrortext(long nErrorCode, BSTR* psErrorText)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR;
	InvokeHelper(0xe0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nErrorCode, psErrorText);
	return result;
}

long CLul::LlDomGetSubobjectCount(long hDOMObj, long* nCount)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4;
	InvokeHelper(0xe1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hDOMObj, nCount);
	return result;
}

long CLul::LlDesignerInvokeAction(long nMenuID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xe2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMenuID);
	return result;
}

long CLul::LlDesignerRefreshWorkspace()
{
	long result;
	InvokeHelper(0xe3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CLul::LlDesignerFileOpen(LPCTSTR sFileName, long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0xe4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sFileName, nFlags);
	return result;
}

long CLul::LlDesignerFileSave(long nFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xe5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nFlags);
	return result;
}

long CLul::LlDesignerAddAction(long nID, long nFlags, LPCTSTR sMenuText, LPCTSTR sMenuHierarchy, LPCTSTR sTooltipText, long nIcon, long nReserved)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0xe6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nID, nFlags, sMenuText, sMenuHierarchy, sTooltipText, nIcon, nReserved);
	return result;
}

long CLul::LlDesignerGetOptionString(long nIndex, BSTR* psBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR;
	InvokeHelper(0xe7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, psBuffer);
	return result;
}

long CLul::LlDesignerSetOptionString(long nIndex, LPCTSTR sBuffer)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xe8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, sBuffer);
	return result;
}

long CLul::LlGetProjectParameter(LPCTSTR sProjectName, LPCTSTR sParam, BSTR* psValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_PBSTR;
	InvokeHelper(0xe9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sProjectName, sParam, psValue);
	return result;
}

long CLul::LlDbAddTableRelationEx(LPCTSTR sTableID, LPCTSTR sParentTableID, LPCTSTR sRelationID, LPCTSTR sRelationDisplayName, LPCTSTR sKeyField, LPCTSTR sParentKeyField)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xea, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sTableID, sParentTableID, sRelationID, sRelationDisplayName, sKeyField, sParentKeyField);
	return result;
}

long CLul::LlDbAddTableSortOrderEx(LPCTSTR sTableID, LPCTSTR sSortOrderID, LPCTSTR sSortOrderDisplayName, LPCTSTR sField)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xeb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		sTableID, sSortOrderID, sSortOrderDisplayName, sField);
	return result;
}

long CLul::LlLocAddDictionaryEntry(long nLCID, LPCTSTR sKey, LPCTSTR sValue, long nType)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0xec, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLCID, sKey, sValue, nType);
	return result;
}

long CLul::LlLocAddDesignLCID(long nLCID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xed, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLCID);
	return result;
}

void CLul::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
